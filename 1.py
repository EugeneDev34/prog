import random

def generate_phone():
    """Генерация российского номера: +7 (XXX) XXX-XX-XX"""
    code = random.choice(['901', '902', '916', '925', '926'])
    num = f"{random.randint(0, 999):03}-{random.randint(0, 99):02}-{random.randint(0, 99):02}"
    return f"+7 ({code}) {num}"

# Мужские имена, фамилии и отчества
MALE_NAMES = [
    "Александр", "Дмитрий", "Сергей", "Андрей", "Алексей", "Иван", "Максим", 
    "Михаил", "Артем", "Даниил", "Кирилл", "Никита", "Егор", "Илья", "Владимир",
    "Роман", "Павел", "Константин", "Тимофей", "Глеб", "Ярослав", "Арсений",
    "Денис", "Владислав", "Василий", "Матвей", "Степан", "Юрий", "Борис", 
    "Георгий", "Захар", "Данила", "Олег", "Валентин", "Федор", "Леонид", 
    "Виктор", "Семен", "Станислав", "Валерий", "Григорий", "Евгений", "Петр",
    "Анатолий", "Игорь", "Николай", "Вячеслав", "Геннадий", "Руслан", "Святослав",
    "Богдан", "Антон", "Елисей", "Марк", "Лев", "Филипп", "Тимур", "Всеволод",
    "Мирон", "Платон", "Прохор", "Савелий", "Аркадий", "Артур", "Давид", 
    "Игнат", "Марат", "Эдуард", "Юлиан", "Ян", "Альберт", "Виталий", "Гарри",
    "Демьян", "Емельян", "Камиль", "Лука", "Назар", "Остап", "Радик", "Родион",
    "Савва", "Тарас", "Филипп", "Эрик", "Яков", "Адам", "Альфред", "Армен",
    "Влад", "Герман", "Добрыня", "Ефим", "Зиновий", "Ибрагим", "Карл"
]

FEMALE_NAMES = [
    "Анна", "Мария", "Елена", "Ольга", "Наталья", "Ирина", "Светлана", "Татьяна",
    "Екатерина", "Анастасия", "Дарья", "Юлия", "Александра", "Полина", "Ксения",
    "Вероника", "Алина", "Маргарита", "Валерия", "София", "Виктория", "Кристина",
    "Елизавета", "Ангелина", "Диана", "Людмила", "Галина", "Валентина", "Лариса",
    "Надежда", "Зинаида", "Тамара", "Раиса", "Серафима", "Лидия", "Эльвира",
    "Карина", "Алла", "Инна", "Марина", "Любовь", "Яна", "Римма", "Регина",
    "Ульяна", "Арина", "Василиса", "Алевтина", "Агата", "Богдана", "Варвара",
    "Вера", "Глафира", "Евгения", "Жанна", "Зоя", "Инесса", "Капитолина", "Лада",
    "Леся", "Милана", "Нина", "Олеся", "Пелагея", "Радмила", "Снежана", "Таисия",
    "Устинья", "Фаина", "Христина", "Цветана", "Эвелина", "Юлиана", "Ярослава",
    "Амелия", "Береслава", "Веселина", "Гульнара", "Дарина", "Есения", "Жасмин",
    "Злата", "Иванна", "Йоланта", "Кира", "Лера", "Майя", "Нелли", "Оксана",
    "Прасковья", "Роза", "Стелла", "Тереза", "Феврония", "Чулпан", "Эльза",
    "Юнона", "Ясмина"
]

MALE_SURNAMES = [
    "Иванов", "Петров", "Сидоров", "Смирнов", "Кузнецов", "Попов", "Васильев",
    "Новиков", "Федоров", "Морозов", "Волков", "Алексеев", "Лебедев", "Семенов",
    "Егоров", "Павлов", "Козлов", "Степанов", "Николаев", "Орлов", "Андреев",
    "Макаров", "Никитин", "Захаров", "Зайцев", "Соловьев", "Борисов", "Яковлев",
    "Григорьев", "Романов", "Воробьев", "Сергеев", "Кузьмин", "Фролов", "Александров",
    "Дмитриев", "Королев", "Гусев", "Киселев", "Ильин", "Максимов", "Поляков",
    "Сорокин", "Виноградов", "Ковалев", "Белов", "Медведев", "Антонов", "Тарасов",
    "Жуков", "Баранов", "Филиппов", "Комаров", "Давыдов", "Беляев", "Герасимов",
    "Богданов", "Осипов", "Сидоров", "Матвеев", "Титов", "Марков", "Миронов",
    "Крылов", "Куликов", "Карпов", "Власов", "Мельников", "Денисов", "Гаврилов",
    "Тихонов", "Казаков", "Афанасьев", "Данилов", "Савельев", "Тимофеев", "Фомин",
    "Чернов", "Абрамов", "Мартынов", "Ефимов", "Щербаков", "Назаров", "Калинин",
    "Исаев", "Чернышев", "Быков", "Маслов", "Родионов", "Коновалов", "Лазарев",
    "Воронин", "Климов", "Филатов", "Пономарев", "Голубев", "Кудрявцев", "Прохоров"
]

FEMALE_SURNAMES = [
    "Иванова", "Петрова", "Сидорова", "Смирнова", "Кузнецова", "Попова", "Васильева",
    "Новикова", "Федорова", "Морозова", "Волкова", "Алексеева", "Лебедева", "Семенова",
    "Егорова", "Павлова", "Козлова", "Степанова", "Николаева", "Орлова", "Андреева",
    "Макарова", "Никитина", "Захарова", "Зайцева", "Соловьева", "Борисова", "Яковлева",
    "Григорьева", "Романова", "Воробьева", "Сергеева", "Кузьмина", "Фролова", "Александрова",
    "Дмитриева", "Королева", "Гусева", "Киселева", "Ильина", "Максимова", "Полякова",
    "Сорокина", "Виноградова", "Ковалева", "Белова", "Медведева", "Антонова", "Тарасова",
    "Жукова", "Баранова", "Филиппова", "Комарова", "Давыдова", "Беляева", "Герасимова",
    "Богданова", "Осипова", "Сидорова", "Матвеева", "Титова", "Маркова", "Миронова",
    "Крылова", "Куликова", "Карпова", "Власова", "Мельникова", "Денисова", "Гаврилова",
    "Тихонова", "Казакова", "Афанасьева", "Данилова", "Савельева", "Тимофеева", "Фомина",
    "Чернова", "Абрамова", "Мартынова", "Ефимова", "Щербакова", "Назарова", "Калинина",
    "Исаева", "Чернышева", "Быкова", "Маслова", "Родионова", "Коновалова", "Лазарева",
    "Воронина", "Климова", "Филатова", "Пономарева", "Голубева", "Кудрявцева", "Прохорова"
]

MALE_PATRONYMICS = [
    "Александрович", "Дмитриевич", "Сергеевич", "Андреевич", "Алексеевич", "Иванович", 
    "Максимович", "Михайлович", "Артемович", "Даниилович", "Кириллович", "Никитич", 
    "Егорович", "Ильич", "Владимирович", "Романович", "Павлович", "Константинович", 
    "Тимофеевич", "Глебович", "Ярославович", "Арсеньевич", "Денисович", "Владиславович", 
    "Васильевич", "Матвеевич", "Степанович", "Юрьевич", "Борисович", "Георгиевич", 
    "Захарович", "Данилович", "Олегович", "Валентинович", "Федорович", "Леонидович", 
    "Викторович", "Семенович", "Станиславович", "Валерьевич", "Григорьевич", "Евгеньевич", 
    "Петрович", "Анатольевич", "Игоревич", "Николаевич", "Вячеславович", "Геннадьевич", 
    "Русланович", "Святославович", "Богданович", "Антонович", "Елисеевич", "Маркович", 
    "Львович", "Филиппович", "Тимурович", "Всеволодович", "Миронович", "Платонович", 
    "Прохорович", "Савельевич", "Аркадьевич", "Артурович", "Давидович", "Игнатьевич", 
    "Маратович", "Эдуардович", "Юлианович", "Янович", "Альбертович", "Витальевич", 
    "Гарриевич", "Демьянович", "Емельянович", "Камилевич", "Лукич", "Назарович", 
    "Остапович", "Радикович", "Родионович", "Саввич", "Тарасович", "Филиппович", 
    "Эрикович", "Яковлевич", "Адамович", "Альфредович", "Арменович", "Владович", 
    "Германович", "Добрынич", "Ефимович", "Зиновьевич", "Ибрагимович", "Карлович"
]

FEMALE_PATRONYMICS = [
    "Александровна", "Дмитриевна", "Сергеевна", "Андреевна", "Алексеевна", "Ивановна", 
    "Максимовна", "Михайловна", "Артемовна", "Данииловна", "Кирилловна", "Никитична", 
    "Егоровна", "Ильинична", "Владимировна", "Романовна", "Павловна", "Константиновна", 
    "Тимофеевна", "Глебовна", "Ярославовна", "Арсеньевна", "Денисовна", "Владиславовна", 
    "Васильевна", "Матвеевна", "Степановна", "Юрьевна", "Борисовна", "Георгиевна", 
    "Захаровна", "Даниловна", "Олеговна", "Валентиновна", "Федоровна", "Леонидовна", 
    "Викторовна", "Семеновна", "Станиславовна", "Валерьевна", "Григорьевна", "Евгеньевна", 
    "Петровна", "Анатольевна", "Игоревна", "Николаевна", "Вячеславовна", "Геннадьевна", 
    "Руслановна", "Святославовна", "Богдановна", "Антоновна", "Елисеевна", "Марковна", 
    "Львовна", "Филипповна", "Тимуровна", "Всеволодовна", "Мироновна", "Платоновна", 
    "Прохоровна", "Савельевна", "Аркадьевна", "Артуровна", "Давидовна", "Игнатьевна", 
    "Маратовна", "Эдуардовна", "Юлиановна", "Яновна", "Альбертовна", "Витальевна", 
    "Гарриевна", "Демьяновна", "Емельяновна", "Камильевна", "Лукьяновна", "Назаровна", 
    "Остаповна", "Радиковна", "Родионовна", "Саввична", "Тарасовна", "Филипповна", 
    "Эриковна", "Яковлевна", "Адамовна", "Альфредовна", "Арменовна", "Владовна", 
    "Германовна", "Добрынична", "Ефимовна", "Зиновьевна", "Ибрагимовна", "Карловна"
]


# Список доменов
CUSTOM_DOMAINS = [
    "supermail.xyz", "fastbox.pro", "megahost.net", "quickpost.tech",
    "cybermail.io", "databox.biz", "virtualpost.cloud", "netexpress.digital",
    "ultramail.space", "quantumail.ai", "neomail.live", "hyperpost.online",
    "mailfaster.com", "inboxrush.ru", "postalwave.net", "digitalpost.site",
    "netletter.org", "speedmail.tech", "webpost.pro", "cloudinbox.xyz"
]

def generate_email(first_name, last_name):
    """Генерация email на основе имени и фамилии"""
    
    # Варианты формирования email
    patterns = [
        f"{first_name[0].lower()}{last_name.lower()}",
        f"{first_name.lower()}.{last_name.lower()}",
        f"{last_name.lower()}{random.randint(10, 199)}"
    ]
    
    return f"{random.choice(patterns)}@{random.choice(CUSTOM_DOMAINS)}{random.randint(10, 199)}"

def generate_person():
    # Случайно выбираем пол
    is_male = random.choice([True, False])
    
    if is_male:
        name = random.choice(MALE_NAMES)
        surname = random.choice(MALE_SURNAMES)
        patronymic = random.choice(MALE_PATRONYMICS)
    else:
        name = random.choice(FEMALE_NAMES)
        surname = random.choice(FEMALE_SURNAMES)
        patronymic = random.choice(FEMALE_PATRONYMICS)
    
    unique_num = random.randint(1, 100)
    
    # Формируем данные персоны
    person_data = {
        "name": name,
        "patronymic": patronymic,
        "surname": f"{surname}_{unique_num}",
        "phone": generate_phone(),
    }
    
    # Генерируем email
    person_data["email"] = generate_email(name, person_data["surname"])
    
    return person_data

# первое письмо
def create_eml_file(name, from_email, num):
    received_date = "Thu, 31 Jul 2025 10:19:54 +0700"
    message_id = from_email+name
    email_date = "Thu, 31 Jul 2025 10:19:53 +0700"
    user_agent = "Mozilla Thunderbird"
    content_language = "ru"
    to_email = "E В Ч <тестирование@наша.работа>"
    subject = f"Пример письма {name}"
    body = "Это тестовое письмо."

    filename= num +"_email.eml"
    
    eml_content = f"""Received: {received_date}
Message-ID: <{message_id}>
Date: {email_date}
User-Agent: {user_agent}
Content-Language: {content_language}
To: {to_email}
From: {from_email}
Subject: {subject}

{body}
"""
    
    with open(filename, "w", encoding="utf-8") as file:
        file.write(eml_content)
    
    print(f"Файл {filename} успешно создан!")

# референс письмо
def create_refer_eml_file(name, from_email):
    received_date = "Thu, 31 Jul 2025 10:19:54 +0700"
    message_id = from_email+name+str(random.randint(1, 100))
    References = from_email+name
    email_date = "Thu, 31 Jul 2025 10:19:53 +0700"
    user_agent = "Mozilla Thunderbird"
    content_language = "ru"
    to_email = "E В Ч <тестирование@наша.работа>"
    subject = f"Пример второго письма {name}"
    body = "Это второе тестовое письмо."

    filename="№2_email.eml"
    
    eml_content = f"""Received: {received_date}
Message-ID: <{message_id}>
References: <{References}>
Date: {email_date}
User-Agent: {user_agent}
Content-Language: {content_language}
To: {to_email}
From: {from_email}
Subject: {subject}

{body}
"""
    
    with open(filename, "w", encoding="utf-8") as file:
        file.write(eml_content)
    
    print(f"Файл {filename} успешно создан!")

def main():
    print("Добро пожаловать в генератор тестовых данных!")
    print("Для выполнения программы нажмите 1, для выхода - любую другую клавишу...")
    
    user_input = input()
    
    if user_input != '1':
        print("Программа завершена.")
        return
    
    print("\nГенерация данных...\n")
    
    # Генерация и вывод данных первой персоны
    person = generate_person()
    print("Имя:", person["name"])
    print("Отчество:", person["patronymic"])
    print("Фамилия:", person["surname"])
    print("Телефон:", person["phone"])
    print("Email:", person["email"])
    create_eml_file(person["name"], person["email"], "№1")
    create_refer_eml_file(person["name"], person["email"])

    # Генерация и вывод данных второй персоны
    person2 = generate_person()
    print("\nИмя:", person2["name"])
    print("Отчество:", person2["patronymic"])
    print("Фамилия:", person2["surname"])
    print("Телефон:", person2["phone"])
    print("Email:", person2["email"])
    create_eml_file(person2["name"], person2["email"], "№3")
    
    # Запрос на выход по нажатию 2
    print("\nПрограмма завершена. Нажмите **2** для выхода...")
    while True:
        key = input()  # Ждём ввода
        if key == "2":
            break
        else:
            print("Нажмите **2**, а не что-то другое!")

if __name__ == "__main__":
    main()
